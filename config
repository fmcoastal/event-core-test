#!/bin/bash

#  Instead of linking in a bunch of different files into the program and 
#     and keeping everything compiling,  What I have decided to do is
#     create fs_test_xxxxx.[ch] and use soft links to compile the
#     variation files into the application.
#
#     you will need to update the "x" file to call the correct pass in arguments
#       maybe I will rework argv and arg c such that a string in the fs_test_xxxx.c
#       file is added to the command line arguments (TBD)  



if [ "$1" == "multi" ] ; then

rm fs_test.c
rm fs_test.h

ln -s fs_test_multi_evt_port.c  fs_test.c
ln -s fs_test_multi_evt_port.h  fs_test.h

elif [ "$1" == "parse" ] ; then

rm fs_test.c
rm fs_test.h

ln fs_test_parse.c  fs_test.c
ln fs_test_parse.h  fs_test.h

elif [ "$1" == "rss" ] ; then

rm fs_test.c
rm fs_test.h

ln fs_test_rss.c  fs_test.c
ln fs_test_rss.h  fs_test.h

else
  echo "unrecognize argument"
  echo " valid arguments:"
  echo "         \" multi\""
  echo "         \"parse\" "
  echo "         \"rss\""
  exit
fi


md5sum fs_test.c
md5sum fs_test_multi_evt_port.c
md5sum fs_test_parse.c
md5sum fs_test_rss.c

make clean

